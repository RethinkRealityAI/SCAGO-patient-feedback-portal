rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return isAuthenticated() &&
             exists(/databases/$(database)/documents/config/admins) &&
             (request.auth.token.email in get(/databases/$(database)/documents/config/admins).data.emails);
    }
    
    // Helper function to check if user is YEP Manager
    function isYEPManager() {
      return isAuthenticated() &&
             exists(/databases/$(database)/documents/config/yep_managers) &&
             (request.auth.token.email in get(/databases/$(database)/documents/config/yep_managers).data.emails);
    }
    
    // Helper function to check if user is admin or YEP Manager
    function isAdminOrYEPManager() {
      return isAdmin() || isYEPManager();
    }
    
    // Surveys - Read by anyone, Write by admin only
    match /surveys/{surveyId} {
      allow read: if true;  // Anyone can view surveys
      allow create, update, delete: if isAdmin();  // Only admins can modify
    }
    
    // Feedback submissions - Create by anyone, Read/Update/Delete by admin only
    match /feedback/{feedbackId} {
      allow create: if true;  // Anyone can submit feedback
      allow read: if isAdmin();  // Only admins can read feedback
      allow update, delete: if isAdmin();  // Only admins can modify
    }
    
    // Config collection - Read by authenticated users, Write by admin only
    match /config/{docId} {
      allow read: if isAuthenticated();  // Authenticated users can check admin status
      allow write: if isAdmin();  // Only admins can modify
    }
    
    // User tracking - Anyone can write (for login tracking), Admin can read
    match /users/{userId} {
      allow read: if isAdmin();
      allow write: if isAuthenticated();  // Users can update their own tracking data
    }
    
    // User activity - Anyone authenticated can write, Admin can read
    match /userActivity/{activityId} {
      allow read: if isAdmin();
      allow write: if isAuthenticated();  // For activity logging
    }
    
    // Backups collection - Admin only
    match /backups/{backupId} {
      allow read, write: if isAdmin();
    }
    
    // Youth Empowerment Program Collections - Admin, YEP Manager, or Owner
    match /yep_participants/{participantId} {
      // Admins and YEP Managers have full access
      allow read, write: if isAdminOrYEPManager();
      
      // Participants can read their own profile
      allow read: if isAuthenticated() && 
                     (resource.data.userId == request.auth.uid || 
                      resource.data.authEmail == request.auth.token.email);
      
      // Participants can update limited fields on their own profile
      allow update: if isAuthenticated() && 
                       (resource.data.userId == request.auth.uid || 
                        resource.data.authEmail == request.auth.token.email) &&
                       // Only allow updating specific fields
                       request.resource.data.diff(resource.data).changedKeys()
                         .hasOnly(['phoneNumber', 'emergencyContactRelationship', 'emergencyContactNumber', 
                                   'mailingAddress', 'streetAddress', 'city', 'province', 'postalCode', 
                                   'availability', 'notes', 'fileUrl', 'fileName', 'fileType', 
                                   'lastLoginAt', 'profileCompleted', 'updatedAt']);
    }
    
    match /yep_mentors/{mentorId} {
      // Admins and YEP Managers have full access
      allow read, write: if isAdminOrYEPManager();
      
      // Mentors can read their own profile
      allow read: if isAuthenticated() && 
                     (resource.data.userId == request.auth.uid || 
                      resource.data.authEmail == request.auth.token.email);
      
      // Mentors can update limited fields on their own profile
      allow update: if isAuthenticated() && 
                       (resource.data.userId == request.auth.uid || 
                        resource.data.authEmail == request.auth.token.email) &&
                       // Only allow updating specific fields
                       request.resource.data.diff(resource.data).changedKeys()
                         .hasOnly(['phone', 'availability', 'fileUrl', 'fileName', 'fileType', 
                                   'lastLoginAt', 'profileCompleted', 'updatedAt']);
    }
    
    match /yep_workshops/{workshopId} {
      allow read, write: if isAdminOrYEPManager();
    }
    
    match /yep_workshop_attendance/{attendanceId} {
      allow read, write: if isAdminOrYEPManager();
    }
    
    match /yep_advisor_meetings/{meetingId} {
      allow read, write: if isAdminOrYEPManager();
    }
    
    // YEP Messages - Users can only read messages they sent or received
    match /yep_messages/{messageId} {
      // Users can only read messages they sent or received
      allow read: if isAuthenticated() && 
        (resource.data.senderId == request.auth.uid || 
         resource.data.recipientId == request.auth.uid);
      
      // Users can create messages if they are the sender
      allow create: if isAuthenticated() && 
        request.resource.data.senderId == request.auth.uid;
      
      // Users can update messages they received (mark as read)
      allow update: if isAuthenticated() && 
        resource.data.recipientId == request.auth.uid &&
        request.resource.data.diff(resource.data).changedKeys()
          .hasOnly(['read', 'readAt', 'updatedAt']);
    }
    
    // YEP Meetings - Both participant and mentor can read their meetings
    match /yep_meetings/{meetingId} {
      // Both participant and mentor can read their meetings
      allow read: if isAuthenticated() && 
        (resource.data.participantUserId == request.auth.uid || 
         resource.data.mentorUserId == request.auth.uid);
      
      // Both can create meeting requests
      allow create: if isAuthenticated() && 
        (request.resource.data.participantUserId == request.auth.uid || 
         request.resource.data.mentorUserId == request.auth.uid);
      
      // Both can update meetings (approve, reject, cancel)
      allow update: if isAuthenticated() && 
        (resource.data.participantUserId == request.auth.uid || 
         resource.data.mentorUserId == request.auth.uid);
    }
    
    // YEP Form Templates - Admin or YEP Manager
    match /yep-form-templates/{templateId} {
      allow read, write: if isAdminOrYEPManager();
    }
    
    // YEP Form Submissions - Admin or YEP Manager
    match /yep-form-submissions/{submissionId} {
      allow read, write: if isAdminOrYEPManager();
    }
  }
}
