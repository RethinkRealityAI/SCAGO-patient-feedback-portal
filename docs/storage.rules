rules_version = '2';

// Firebase Storage Security Rules
service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return isAuthenticated() &&
             exists(/databases/(default)/documents/config/admins) &&
             (request.auth.token.email in get(/databases/(default)/documents/config/admins).data.emails);
    }
    
    // Helper function to check if user is YEP Manager
    function isYEPManager() {
      return isAuthenticated() &&
             exists(/databases/(default)/documents/config/yep_managers) &&
             (request.auth.token.email in get(/databases/(default)/documents/config/yep_managers).data.emails);
    }
    
    // Helper function to check if user is admin or YEP Manager
    function isAdminOrYEPManager() {
      return isAdmin() || isYEPManager();
    }
    
    // YEP Files - Admin or YEP Manager can read/write
    match /yep-files/{allPaths=**} {
      allow read, write: if isAdminOrYEPManager();
    }
    
    // Survey Files - Admin can read/write, public can read
    match /survey-files/{allPaths=**} {
      allow read: if true;  // Public read access for survey files
      allow write: if isAdmin();  // Only admins can upload survey files
    }
    
    // Feedback Files - Anyone can upload (create/update), only admin can read/delete
    match /feedback-files/{allPaths=**} {
      allow read: if isAdmin();
      // Non-admin may create/update (request.resource != null). Admin may perform any write, including deletes
      allow write: if (isAuthenticated() && request.resource != null) || isAdmin();
    }
    
    // Profile Images - Authenticated users can read/write their own
    match /profile-images/{userId}/{allPaths=**} {
      allow read: if true;  // Public read access
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Temporary uploads - Auth users can create/update, admin can delete
    match /temp/{allPaths=**} {
      allow read: if isAuthenticated();
      // create/update by authenticated users, delete by admin (request.resource == null)
      allow write: if (isAuthenticated() && request.resource != null) || (isAdmin() && request.resource == null);
    }
  }
}
