rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/config/admins) &&
             get(/databases/$(database)/documents/config/admins).data.emails.hasAny([request.auth.token.email]);
    }
    
    // Surveys - Read by anyone, Write by admin only
    match /surveys/{surveyId} {
      allow read: if true;  // Anyone can view surveys
      allow create, update, delete: if isAdmin();  // Only admins can modify
    }
    
    // Feedback submissions - Create by anyone, Read/Update/Delete by admin only
    match /feedback/{feedbackId} {
      allow create: if true;  // Anyone can submit feedback
      allow read, update, delete: if isAdmin();  // Only admins can view/manage
    }
    
    // Config collection - Read by authenticated users, Write by admin only
    match /config/{docId} {
      allow read: if isAuthenticated();  // Authenticated users can check admin status
      allow write: if isAdmin();  // Only admins can modify
    }
    
    // User tracking - Anyone can write (for login tracking), Admin can read
    match /users/{userId} {
      allow read: if isAdmin();
      allow write: if isAuthenticated();  // Users can update their own tracking data
    }
    
    // User activity - Anyone authenticated can write, Admin can read
    match /userActivity/{activityId} {
      allow read: if isAdmin();
      allow write: if isAuthenticated();  // For activity logging
    }
    
    // Backups collection - Admin only
    match /backups/{backupId} {
      allow read, write: if isAdmin();
    }
  }
}

